{{#section 'todolist'}}
    <script src="plugins/vue/vue.min.js"></script>  
    <script src="https://cdn.rawgit.com/chrisvfritz/5f0a639590d6e648933416f90ba7ae4e/raw/98739fb8ac6779cb2da11aaa9ab6032e52f3be00/currency-validator.js"></script>
    <script>
        Vue.config.delimiters = ["[[", "]]"]
    </script>
    <style type="text/css">  
        #todo {display: inline-block;}
        #todolist li.finished { background-color: green; color: white; }  
    </style>  
{{/section}}
    <div id="todolist">  
        <h2 @click="clickH2" v-bind:title="!isEditting?'点击编辑':''">  
            <input id="#todo" v-model="user" v-show="isEditting" @keyup.enter="isEditting=false" @blur="isEditting=false" />  
            <span v-show="!isEditting" @click="isEditting=true" v-bind:title="user">[[user]] 的todolist</span>
        </h2>  
        <div>  
            <button @click="addOne">添加新项目</button>  
            <button @click="deleteSelectedItems">删除所选项目</button>  
            <button @click="deleteAll">删除所有项目</button>  
        </div>  
        <ul v-for="(index, item) in list">  
            <li v-bind:class="[item.finished?'finished':'']">  
                <div v-show="item.isEditting">  
                    <input type="checkbox" v-model="item.selected" />  
                    <input v-model="item.title" class="content" />  
                    <button @click="item.isEditting=false">保存</button>  
                </div>  
                <div v-show="!item.isEditting">  
                    <input type="checkbox" v-model="item.selected" />  
                    <span>[[item.title]]</span>  
                    <button v-if="!item.finished" @click="item.finished=true">标记为已完成</button>  
                    <button v-if="item.finished" @click="item.finished=false">标记为未完成</button>  
                    <button @click="editItem(index)">编辑</button>  
                </div>  
            </li>  
        </ul>  
    </div>  
    <br/>
    <hr/>
    <script>  
    localStorage.removeItem('todolist_user');
    localStorage.removeItem('todolist_list');
        new Vue({  
            el: '#todolist',  
            data: {  
                    isEditting: false,  
                    user: "",  
                    list: []  
                 
            },  
            watch: {  
                user: function (val, oldVal) {  
                    localStorage.setItem('todolist_user', val);
                },  
                list: {  
                    handler: function (val, oldVal) {  
                        var str = JSON.stringify(val)  
                        localStorage.setItem('todolist_list', str)  
                    },  
                    deep: true  
                }  
            },  
            methods: {  
                clickH2: function () {  
                    if (!this.user) {  
                        this.isEditting = true  
                    }  
                },  
                addOne: function () {  
                    var item = {  
                        title: '',  
                        finished: false,  
                        selected: false,  
                        isEditting: true  
                    }  
                    this.list.push(item)  
                    var vm = this  
                    Vue.nextTick(function () {  
                        vm.$el.querySelectorAll('li')[vm.list.length - 1].querySelector('.content').focus()  
                    })  
                },  
                editItem: function (index) {  
                    this.list[index].isEditting = true  
                    var vm = this  
                    Vue.nextTick(function () {  
                        vm.$el.querySelectorAll('li')[index].querySelector('.content').focus()  
                    })  
                },  
                deleteSelectedItems: function () {  
                    this.list = this.list.filter(function (item) {  
                        return !item.selected  
                    })  
                },  
                deleteAll: function () {  
                    this.list = []  
                }  
            }  
        });
        </script>
        <div id="todo-list-example">
          <input
            v-model="newTodoText"
            v-on:keyup.enter="addNewTodo"
            placeholder="Add a todo"
          >
          <ul>
            <li
              
              v-for="(index, todo) in todos"
              v-bind:title="todo"
              v-on:remove="todos.splice(index, 1)"
            >[[todo]]
                <button v-on:click="todos.splice(index, 1)">X</button>
            </li>
          </ul>
        </div>
        <script>
        // Vue.component('todo-item', {
        //       template: '\
        //         <li>\
        //           {{ title }}\
        //           <button v-on:click="$emit(\'remove\')">X</button>\
        //         </li>\
        //       ',
        //       props: ['title']
        //     });
        new Vue({
              el: '#todo-list-example',
              data: {
                newTodoText: '',
                todos: [
                  'Do the dishes',
                  'Take out the trash',
                  'Mow the lawn'
                ]
              },
              methods: {
                addNewTodo: function () {
                  this.todos.push(this.newTodoText)
                  this.newTodoText = '';
                }
              }
            });
        </script>  
    <br>
    <hr>
    <div id="app">
      <currency-input  label="Price"  v-model="price"></currency-input>
      <currency-input  label="Shipping"  v-model="shipping"></currency-input>
      <currency-input  label="Handling" v-model="handling" ></currency-input>
      <currency-input  label="Discount" v-model="discount"></currency-input>

      <p>Total: $[[ total ]]</p>
    </div>
    <script>
        Vue.component('currency-input', {
          template: '\
            <div>\
              <label v-if="label">[[ label ]]</label>\
              $\
              <input\
                v-ref="input"\
                v-bind:value="value"\
                v-on:input="updateValue($event.target.value)"\
                v-on:focus="selectAll"\
                v-on:blur="formatValue"\
              >\
            </div>\
          ',
          props: {
            value: {
              type: Number,
              default: 0
            },
            label: {
              type: String,
              default: ''
            }
          },
          mounted: function () {
            this.formatValue();
          },
          methods: {
            updateValue: function (value) {
              var result = currencyValidator.parse(value, this.value)
              if (result.warning) {
                this.$refs.input.value = result.value
              }
              this.$emit('input', result.value)
            },
            formatValue: function () {
              this.$refs.input.value = currencyValidator.format(this.value)
            },
            selectAll: function (event) {
              // Workaround for Safari bug
              // http://stackoverflow.com/questions/1269722/selecting-text-on-focus-using-jquery-not-working-in-safari-and-chrome
              setTimeout(function () {
                event.target.select()
              }, 0)
            }
          }
        });

        new Vue({
          el: '#app',
          data: {
            price: 0,
            shipping: 0,
            handling: 0,
            discount: 0
          },
          computed: {
            total: function () {
              return ((
                this.price * 100 + 
                this.shipping * 100 + 
                this.handling * 100 - 
                this.discount * 100
              ) / 100).toFixed(2)
            }
          }
        });
    </script>
